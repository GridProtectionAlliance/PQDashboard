@*******************************************************************************************************
//  PageTemplate.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  01/22/2016 - J. Ritchie Carroll
//       Generated original version of source code.
//
//*****************************************************************************************************@
@using System.Data
@using GSF
@using GSF.Data
@using PQDashboard.Model
@model AppModel
@{
    // TODO: Examples of how to get to settings

    Dictionary<string, string> appSettings = Model.Global.ApplicationSettings;
    string setting;


    int warningDays;

    // Get warning days
    if (!appSettings.TryGetValue("warningDays", out setting) || !int.TryParse(setting, out warningDays)) {
        warningDays = 14;
    }



    int defaultCriticalAlarmDays;

    // Get default critical alarm days
    if (!appSettings.TryGetValue("criticalAlarmDays", out setting) || !int.TryParse(setting, out defaultCriticalAlarmDays))
    {
        defaultCriticalAlarmDays = 3;
    }

    // Validate default value
    defaultCriticalAlarmDays = Math.Abs(defaultCriticalAlarmDays);

    if (defaultCriticalAlarmDays < 2 || defaultCriticalAlarmDays > 9)
    {
        defaultCriticalAlarmDays = 3;
    }


    // Use helper function to get page defaults - checks for overrides in ServerConfiguration first, then attempts tp pickup default from page.default settings
    string statusLightsImagePath = Model.GetPageSetting(ViewBag, "statusLightsImagePath", "~/Images/StatusLights/Small/");
    statusLightsImagePath = Url.Content(statusLightsImagePath).EnsureEnd('/');


    // Get custom image path for page
    string pageImagePath = ViewBag.PageImagePath;


    // TODO: Database examples

    DataContext dataContext = Model.DataContext;


    // Traditional examples

    AdoDataConnection connection = dataContext.Connection;

    connection.ExecuteNonQuery("DELETE FROM Table WHERE ID = 11");

    int id = connection.ExecuteScalar<int?>("SELECT ID FROM Table WHERE Field = Value") ?? 0;

    DataTable recordSet = connection.RetrieveData("SELECT * FROM Table WHERE Field = Value");

    foreach (DataRow row in recordSet.Rows) {
        string column = row["FieldName"] as string;
    }

    // Model based examples

    //Patch

    IEnumerable<Patch> records = dataContext.Table<Patch>().QueryRecords("SortOrder", new RecordRestriction("Field = 'SomeValue'"));

    foreach (Patch patch in records) {
        string summary = patch.Summary;
    }

    // Parameterized query
    dataContext.Table<Patch>().QueryRecords("SortOrder DESC", new RecordRestriction("Field = {0}", "someValue"));

}
<p>Body HTML goes here...</p>
<p>(1) Add view to MainController...</p>

@* Bootstrap "row" consists of 12-columns by default *@
<div class="row">
    @* Bootstrap "column" with default targeting for medium sized screens, spanning 4 columns *@
    <div class="col-md-4">
        @* Bootstrap "button" with "primary" styling *@
        <button class="btn btn-primary" onclick="showInfoMessage('Test Info Message!', -1)">Info Test</button>

        @* Bootstrap "button" with "danger" styling *@
        <button class="btn btn-danger" onclick="showErrorMessage('Test Error Message!', -1)">Error Test</button>

        <h4>Page Image Path = @ViewBag.PageImagePath</h4>
        <h4>Page Server Configuration Settings Count = @ViewBag.PageSettings.Count</h4>
        <h4>User = @User.Identity.Name</h4>
        <h4>Is Authenticated = @User.Identity.IsAuthenticated</h4>
        <h4>Is in Administrator Role = @User.IsInRole("Administrator")</h4>
        <h4>Is in Domain Admins group = @Model.UserIsInGroup("GPA\\Domain Admins")</h4>

        User Groups:
        <ul>
            @foreach (string group in Model.SecurityProvider?.UserData?.Groups ?? new List<string>())
            {
                <li>@group</li>
            }
        </ul>

        <h2>Getting started</h2>
        <p>
            ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
            enables a clean separation of concerns and gives you full control over markup
            for enjoyable, agile development.
        </p>
        <p>
            <a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a>
        </p>
    </div>
    @* Bootstrap "column" with default targeting for medium sized screens, spanning 4 columns *@
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p>
            <a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a>
        </p>
    </div>
    @* Bootstrap "column" with default targeting for medium sized screens, spanning 4 columns *@
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p>
            <a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a>
        </p>
    </div>
</div>
