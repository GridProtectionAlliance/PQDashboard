@*******************************************************************************************************
//  ValueListGroups.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  02/18/2016 - Ritchie Carroll
//       Generated original version of source code.
//
//*****************************************************************************************************@
@using GSF.Web.Model
@using PQDashboard.Model
@model AppModel
@{
    DataContext dataContext = Model.DataContext;

    ViewBag.HeaderColumns = new[]
    {   //    { "Field", "Label", "Classes" }
        new[] { "ID", "ID", "text-center" },
        new[] { "Name", "&nbsp;&nbsp;&nbsp;Name", "text-left" },
        new[] { "Description", "Description", "text-left" },
        new[] { null, "Value&nbsp;Items", "text-center valign-middle" }
    };

    ViewBag.CustomTitle = "Edit System Value Lists";
    ViewBag.Title = "System Value List Group Details";
    ViewBag.BodyRows = BodyRows().ToString();
    ViewBag.AddNewEditDialog = AddNewEditDialog(dataContext).ToString();
}
@helper BodyRows()
{
    <td width="10%" data-bind="text: ID" class="text-center valign-middle" nowrap></td>
    <td width="30%" class="text-left valign-middle" nowrap><button type="button" class="btn btn-link" data-bind="text: Name, click: $parent.viewPageRecord"></button></td>
    <td width="50%" class="text-left table-cell-hard-wrap"><div data-bind="text: $($element.parentElement).truncateToWidth(Description, 1.5), attr: {title: Description}"></div></td>
    <td width="5%" class="text-center valign-middle"><button type="button" class="btn btn-default btn-sm" data-bind="click: openValueListItemEditor.bind($data), enable: $parent.dataHubIsConnected"><span data-bind="attr: {id: 'valueListMode' + ID}">Edit</span>&nbsp;&nbsp;<span class="badge" data-bind="text: getValueListItemCount(ID, $($element)), attr: {id: 'valueListCount' + ID}">0</span></button></td>
    <td width="5%" class="text-center valign-middle" nowrap>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.editPageRecord, enable: $parent.dataHubIsConnected"><span class="glyphicon glyphicon-pencil"></span></button>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.removePageRecord, enable: $parent.dataHubIsConnected"><span class="glyphicon glyphicon-remove"></span></button>
    </td>
}
@helper AddNewEditDialog(DataContext dataContext)
{
    <div class="col-md-12">
        @Html.Raw(dataContext.AddInputField<ValueListGroup>("Name"))
        @Html.Raw(dataContext.AddTextAreaField<ValueListGroup>("Description", rows: 3))
        @Html.Raw(dataContext.AddCheckBoxField<ValueListGroup>("Enabled"))
    </div>
}
@Html.Partial("PagedViewModel")
<div id="editValueListItemDialog" class="modal modal-wide fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <iframe style="border: none" id="editValueListItemFrame"></iframe>
                <button type="button" class="btn btn-default pull-right popup-ok-button" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        @Html.Raw(Model.RenderViewModelConfiguration<ValueListGroup>(ViewBag))

        function getValueListItemCount(groupID, element) {
            if (viewModel.dataHubIsConnected()) {
                dataHub.queryValueListCount(groupID, null).done(function (count) {
                    const valueListMode = $("#valueListMode" + groupID);
                    const valueListCount = $("#valueListCount" + groupID);
                    const modeText = count > 0 ? "Edit" : "Add";

                    if (valueListMode.text() !== modeText)
                        valueListMode.text(modeText);

                    if (valueListCount.text() !== count.toString())
                        valueListCount.text(count.toString());
                });
            }

            return element.text();
        }

        $(window).resize(function () {
            setTimeout(function() {
                $("#editValueListItemFrame").attr("height", ($(document).height() - 150) + "px");
            }, 500);
        });

        function openValueListItemEditor(record) {
            $("#editValueListItemFrame").attr({
                "src": "@Url.Content("~/System/ValueListItems")?ID=" + record.ID + "&Name=" + encodeURIComponent(record.Name),
                "height": ($(document).height() - 150) + "px",
                "width": "100%"
            });

            $("#editValueListItemDialog").modal("show");
        }

        $("#editValueListItemDialog").on("hidden.bs.modal", function () {
            // Refresh page counts after editing tasks
            viewModel.queryPageRecords();

            // Clear frame page
            $("#editValueListItemFrame").attr("src", "about:blank");
        });

        $(function() {
            $("#editValueListItemDialog").modal({ show: false, backdrop: "static", keyboard: false });
        });
    </script>
}